function PupilAnalysisToolbox_MergePupilData
% PupilAnalysisToolbox_MergePupilData
%
% Merges files created on the Windows machine with the experimental file
% generated by OLFlickerSensitivity.
%
% 1/25/16   spitschan   Wrote it.

%% Open the dialogue to get the file name
[theFile, thePath] = uigetfile;
[~, theFileName] = fileparts(theFile);
theFilesRaw = dir([thePath filesep theFileName filesep '*.mat']);
nFilesRaw = length(theFilesRaw);

%% Print some input
fprintf('>> Processing %s ...\n', theFile);
fprintf('>> Found %g files ...\n', nFilesRaw);
fprintf('>> File back up in %s...\n', fullfile(thePath, 'unprocessed'));

% Make the back-up directory
if ~exist(fullfile(thePath, 'unprocessed', theFileName), 'dir')
    mkdir(fullfile(thePath, 'unprocessed', theFileName));
end
fprintf('>> Copying files...');
copyfile(fullfile(thePath, theFile), fullfile(thePath, 'unprocessed', theFile));
copyfile(fullfile(thePath, theFileName), fullfile(thePath, 'unprocessed', theFileName));
fprintf('done.\n');

%% Load in the data
load(fullfile(thePath, theFile));

%% Check if the file has already been processed. If yes, return.
if isfield(params, 'mergeState') && params.mergeState
    commandwindow;
    fprintf('*** File has already been merged.\n');
    return;
end

if nFilesRaw ~= length(params.dataStruct)
   error('*** Number of data files does not lign up with what is expected. Aborting');
end


for j = 1:nFilesRaw
    % Load in the raw pupil data
    load(fullfile(thePath, theFileName, theFilesRaw(j).name));
    fprintf('>> Loading file %g / %g ...', j, nFilesRaw);
    params.dataStruct(j).diameter = dataStruct.diameter;
    params.dataStruct(j).time = dataStruct.time;
    params.dataStruct(j).time_inter = dataStruct.time_inter;
    if isempty(dataStruct.time_inter)
        params.dataStruct(j).time_inter = 0;
    end
    OVERWRITE_DIRECTION = false;
    if OVERWRITE_DIRECTION
        tmp = allwords(params.cacheFileName{params.theDirections(j)}, '-');
        params.dataStruct(j).direction = [tmp{2}];
    end
    tmp0 = params.cacheFileName(params.theDirections);
    if ~isempty(strfind(tmp0{j}, 'Background-45s'));
        phaseSet = [0 90 180 270];
        idx = randi(length(phaseSet), 1);
        params.dataStruct(j).frequencyCarrier = 0.1;
        params.dataStruct(j).phaseCarrier = phaseSet(idx);
        params.dataStruct(j).modulationMode = 'FM';
    end
    params.dataStruct(j).modulationMode = 'pulse';
    if strcmp(params.dataStruct(j).modulationMode, 'pulse')
        theShifts = 0:5;
        params.dataStruct(j).frequencyCarrier = 0;
        params.dataStruct(j).frequencyEnvelope = 0;
        params.dataStruct(j).phaseRandSec = theShifts(params.thePhaseIndices(j));
    end
    % The following section is commented out; this will need to be
    % addressed at a later point.
    %     if ~isempty(strfind(protocol, 'CRF'))
    %         params.dataStruct(j).direction = [params.dataStruct(j).direction '_CRF_' num2str(abs(params.dataStruct(j).contrastRelMax)*42, '%02.fpct')];
    %     elseif ~isempty(strfind(protocol, 'DoublePulse'))
    %         if params.dataStruct(j).contrastRelMax >= 0
    %             params.dataStruct(j).direction = [params.dataStruct(j).direction '_DoublePulse_' num2str(abs(params.dataStruct(j).contrastRelMax)*42, '%02.fpct')];
    %         elseif params.dataStruct(j).contrastRelMax <0
    %             params.dataStruct(j).direction = [params.dataStruct(j).direction '_DoublePulse_-' num2str(abs(params.dataStruct(j).contrastRelMax)*42, '%02.fpct')];
    %         end
    %     else
    params.dataStruct(j).contrastRelMax = 1;
    %end
    
    % Save out some of the raw pupil stuff
    params.dataStruct(j).rawTimeStamps = pupilData.timeStamps;
    params.dataStruct(j).rawPupilDiameter = pupilData.pupilDiameter;
    params.dataStruct(j).rawMmPositions = pupilData.mmPositions;
    params.dataStruct(j).rawFickPositions = pupilData.fickPositions;
    params.dataStruct(j).rawHelmholtzPositions = pupilData.helmholtzPositions;
    fprintf('done.\n');
end

params.mergeState = true;
save(fullfile(thePath, theFile), 'params', 'exp', 'svnInfo');
fprintf('*** All merging finished.\n');